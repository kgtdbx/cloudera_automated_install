LOC=`pwd`
PROPS="cluster_cloud.props"
source $LOC/$PROPS 2>/dev/null
NUMBER_OF_HOSTS=`grep HOST $LOC/$PROPS|grep -v SERVICES|wc -l`
LAST_HOST=`grep HOST $LOC/$PROPS|grep -v SERVICES|head -n $NUMBER_OF_HOSTS|tail -1|cut -d'=' -f2`
grep HOST $LOC/$PROPS|grep -v SERVICES|grep -v $LAST_HOST|cut -d'=' -f2 > $LOC/list



cluster_info()
{
#Start of function
BASE_URL="http://$REPO_SERVER/repo/cdh/parcels/$OS/"

echo "{
  \"cdhVersion\" : \"5.14.0\",
  \"displayName\" : \"demo\",
  \"cmVersion\" : \"5.14.0\",
  \"repositories\" : [ \"$BASE_URL\" ],
  \"products\" : [ {
    \"version\" : \"$PARCEL_VERSION\",
    \"product\" : \"CDH\"
  }],"


#End of function
}


service_fun()
{
#Start of function

rm -fr /tmp/svc
LAST_HST_NAME=`grep 'HOST[0-9]*' $LOC/$PROPS|grep -v SERVICES|tail -1|cut -d'=' -f1`

echo "  \"services\" : [ {"
for HOST in `grep -w 'HOST[0-9]*' $LOC/$PROPS|tr '\n' ' '`
do
   HST_NAME_VAR=`echo $HOST|cut -d'=' -f1`

                LAST_SVC=`grep $HST_NAME_VAR"_SERVICES" $LOC/$PROPS|cut -d'=' -f2|tr ',' ' '|rev|cut -d' ' -f1|rev|cut -d'"' -f1`
                for SVC in `grep $HST_NAME_VAR"_SERVICES" $LOC/$PROPS|cut -d'=' -f2 |sed 's/,/", "/g'|sed -e 's/[^ ]*CLIENT"[^ ]*//ig' | sed "s/\"//g"|sed 's/,//g'`
                do
                        echo $SVC >> /tmp/svc
                done
done
                        service=`sort /tmp/svc|uniq`
for comp in `echo $service`
do
if [ "ZOOKEEPER_SERVER" =  "$comp" ]
then
            echo "          \"refName\" : \"zookeeper\",
            \"serviceType\" : \"ZOOKEEPER\",
            \"roleConfigGroups\" : [ {
              \"refName\" : \"$comp\",
              \"roleType\" : \"SERVER\",
              \"base\" : true
            } ]"        
          echo "}, {" 
fi
done

for comp in `echo $service`
do
if [ "DATANODE" =  "$comp" ]
then
             echo "\"refName\" : \"hdfs\",
             \"serviceType\" : \"HDFS\",
             \"roleConfigGroups\" : [ {
             \"refName\" : \"$comp\",
             \"roleType\" : \"$comp\",
             \"base\" : true" 
fi
done
for comp in `echo $service`
do
if [ "NAMENODE" =  "$comp" ]
then
          echo "}, {
             \"refName\" : \"$comp\",
             \"roleType\" : \"$comp\",
             \"base\" : true" 
fi
done
for comp in `echo $service`
do
if [ "SECONDARY_NAMENODE" =  "$comp" ]
then
          echo "}, {
             \"refName\" : \"$comp\",
             \"roleType\" : \"$comp\",
             \"base\" : true" 
fi
done
        echo "} ]" 


for comp in `echo $service`
do
if [ "NODEMANAGER" =  "$comp" ]
then
        echo "}, {" 
          echo "\"refName\" : \"yarn\",
             \"serviceType\" : \"YARN\",
             \"roleConfigGroups\" : [ {
             \"refName\" : \"$comp\",
             \"roleType\" : \"$comp\",
             \"base\" : false" 
fi
done
for comp in `echo $service`
do
if [ "RESOURCEMANAGER" =  "$comp" ]
then
          echo "}, {
             \"refName\" : \"$comp\",
             \"roleType\" : \"$comp\",
             \"base\" : true" 
fi
done
for comp in `echo $service`
do
if [ "HISTORYSERVER" =  "$comp" ]
then
          echo "}, {
             \"refName\" : \"$comp\",
             \"roleType\" : \"$comp\",
             \"base\" : true" 

fi
done
             echo "} ]" 
             echo "} ]," 
#End of function
}


hosttemplate()
{
#Start of function

LAST_HST_NAME=`grep 'HOST[0-9]*' $LOC/$PROPS|grep -v SERVICES|tail -1|cut -d'=' -f1`
echo "  \"hostTemplates\" : [ {"
for HOST in `grep -w 'HOST[0-9]*' $LOC/$PROPS|tr '\n' ' '`
do
   HST_NAME_VAR=`echo $HOST|cut -d'=' -f1`
   HST_hostname=`echo $HOST|cut -d'=' -f2`
    echo "\"refName\" : \"HostTemplate-1-from-$HST_hostname.$DOMAIN_NAME\",
    \"cardinality\" : 1,"
                SVC=`grep $HST_NAME_VAR"_SERVICES" $LOC/$PROPS|cut -d'=' -f2 |sed 's/,/", "/g'|sed -e 's/[^ ]*CLIENT"[^ ]*//ig'`
		SVC=`echo $SVC|sed 's/,$//'`
		if [ "$HST_NAME_VAR" = "$LAST_HST_NAME" ]
		then
    			echo "\"roleConfigGroupsRefNames\" : [ $SVC ]"
			echo "  } ],"
		else
    			echo "\"roleConfigGroupsRefNames\" : [ $SVC ]"
    			echo "}, {"
		fi
done
#End of function
}

hostmap()
{
#Start of function

echo "\"instantiator\" : {
    \"clusterName\" : \"$CLUSTERNAME\",
    \"hosts\" : [ {"

for HOST in `cat list`
do

      echo "\"hostName\" : \"$HOST.$DOMAIN_NAME\",
      \"hostTemplateRefName\" : \"HostTemplate-0-from-$HOST.$DOMAIN_NAME\"
    }, {"
done
      echo "\"hostNameRange\" : \"$LAST_HOST.$DOMAIN_NAME\",
      \"hostTemplateRefName\" : \"HostTemplate-1-from-$LAST_HOST.$DOMAIN_NAME\"
    } ],
    "roleConfigGroups" : [ {
      "rcgRefName" : "DATANODE-1",
      "name" : ""
    }, {
      "rcgRefName" : "NODEMANAGER-1",
      "name" : ""
    } ]
  }
}"

#End of function
}

cluster_info
service_fun
echo -e "\n"
hosttemplate
echo -e "\n"
hostmap
